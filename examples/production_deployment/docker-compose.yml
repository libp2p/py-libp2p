# Simple Docker Compose for libp2p WebSocket Production Deployment
# Local testing with Docker only

version: '3.8'

services:
  # Main libp2p WebSocket service
  libp2p-websocket:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: libp2p-websocket
    ports:
      - "8080:8080"  # WebSocket port
      - "8081:8081"  # Health check port
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - DOMAIN=libp2p.local
      - STORAGE_PATH=/app/autotls-certs
      - PORT=8080
      - HEALTH_PORT=8081
    volumes:
      - ./autotls-certs:/app/autotls-certs
      - ./logs:/app/logs
    networks:
      - libp2p-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8081/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Certificate manager service
  cert-manager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: libp2p-cert-manager
    command: ["python", "cert_manager.py"]
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - STORAGE_PATH=/app/autotls-certs
      - RENEWAL_THRESHOLD_HOURS=24
      - CERT_VALIDITY_DAYS=90
    volumes:
      - ./autotls-certs:/app/autotls-certs
      - ./logs:/app/logs
    networks:
      - libp2p-network
    restart: unless-stopped
    depends_on:
      - libp2p-websocket

networks:
  libp2p-network:
    driver: bridge
    name: libp2p-production

volumes:
  autotls-certs:
    driver: local
  logs:
    driver: local
