# Kubernetes Ingress for Python libp2p WebSocket Transport
# Based on patterns from js-libp2p and go-libp2p implementations

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: libp2p-websocket-ingress
  namespace: libp2p-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/websocket-services: "libp2p-websocket-service"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - libp2p.local
    - "*.libp2p.local"
    secretName: libp2p-tls-secret
  rules:
  - host: libp2p.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: libp2p-websocket-service
            port:
              number: 8080
  - host: "*.libp2p.local"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: libp2p-websocket-service
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: libp2p-websocket-netpol
  namespace: libp2p-production
spec:
  podSelector:
    matchLabels:
      app: libp2p-websocket
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: libp2p-websocket
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443
    - protocol: TCP
      port: 9090
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
