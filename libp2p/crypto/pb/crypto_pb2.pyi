"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _KeyType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _KeyTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_KeyType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RSA: _KeyType.ValueType  # 0
    Ed25519: _KeyType.ValueType  # 1
    Secp256k1: _KeyType.ValueType  # 2
    ECDSA: _KeyType.ValueType  # 3
    ECC_P256: _KeyType.ValueType  # 4

class KeyType(_KeyType, metaclass=_KeyTypeEnumTypeWrapper): ...

RSA: KeyType.ValueType  # 0
Ed25519: KeyType.ValueType  # 1
Secp256k1: KeyType.ValueType  # 2
ECDSA: KeyType.ValueType  # 3
ECC_P256: KeyType.ValueType  # 4
global___KeyType = KeyType

@typing.final
class PublicKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_TYPE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    key_type: global___KeyType.ValueType
    data: builtins.bytes
    def __init__(
        self,
        *,
        key_type: global___KeyType.ValueType | None = ...,
        data: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "key_type", b"key_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "key_type", b"key_type"]) -> None: ...

global___PublicKey = PublicKey

@typing.final
class PrivateKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_TYPE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    key_type: global___KeyType.ValueType
    data: builtins.bytes
    def __init__(
        self,
        *,
        key_type: global___KeyType.ValueType | None = ...,
        data: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "key_type", b"key_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "key_type", b"key_type"]) -> None: ...

global___PrivateKey = PrivateKey
